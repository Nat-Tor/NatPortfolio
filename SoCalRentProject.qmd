---
title: "NatsPortfolio"
---

# Before Getting Started

Load in packages and data

```{r}
here::i_am("NatsPortfolio/SoCalRentProject.qmd")
```

```{r}
#| label: import data 
library(readr)
library(dplyr)
library(stringr)
library(tidyverse)
library(janitor)
SoCalRent <- read_csv(here::here("NatsPortfolio/ProjectData/SoCalDataRaw_2025.csv"))
```

# Getting the Raw Data

Finding clean and usable public data turned out to be more challenging than expected. After exploring several sources, I decided to use **Redfin** as my main platform, and relied on **Excel’s web tools** to auto-generate tables directly from listing URLs. I focused on three Southern California counties — **Orange County, Riverside County, and Los Angeles County**.

For each county, I gathered data on three different property types: **houses, condos, and apartments**. While the raw data I pulled was relatively structured, it still required some cleaning.

```{r}
head(SoCalRent)
```

# Data Wrangling

There were a few listings with missing data in certain columns, so for the sake of sanity, I just removed them.

**Price** came in various formats (e.g., `$3,185/mo`, `$1940+/mo`), so I removed dollar signs, commas, and plus signs, then converted the column to numeric.

**Beds** and **Baths** also had inconsistent formats like `1 bed`, `3 beds`, or even ranges like `2–4 beds`. I stripped out the words "bed(s)" and "bath(s)", and for ranges, I took the smallest number. Both columns were then converted to numeric.

**SqFt** was the messiest. It appeared as `1668.00`, `1,970`, or ranges like `410–480`. I removed commas and decimal points (since I didn’t need the `.00`), and again, for ranges, I used the lower bound. This column was also converted to numeric.

For the **address** column, I kept it in case I wanted to refer to the full address later. But I also extracted just the **city** name into a separate column to analyze trends across cities.

Lastly, I removed any listings where either **Beds** or **Baths** were equal to zero.

After cleaning, I was left with **278 observations** out of the original **333**.

```{r}
Rent_Clean <- SoCalRent |>
  #cleaning out any listings that have any empty data for the sake of my sanity
  filter(!is.na(Price), !is.na(Beds), !is.na(Baths), !is.na(SqFt), !is.na(Address)) |>
  # Remove rows where SqFt starts with an en dash (—)
  filter(!str_starts(SqFt, "—")) |>
  mutate(
    # Price column: remove any $, +, /mo and change it to a numeric variable
    Price = str_remove_all(Price, "\\$|,|/mo|\\+"),
    Price = as.numeric(Price),

    # Beds column: take the smallest number of beds and change it to a numeric variable
    Beds = str_extract(Beds, "^\\d+"),
    Beds = as.numeric(Beds),

    # Baths column: take the smallest number of baths and change it to a numeric variable
    Baths = str_extract(Baths, "^\\d+(\\.\\d+)?"),
    Baths = as.numeric(Baths),

    # SqFt column: takeing the first number from ranges, removes and commas or dashes and change it to a numeric variable
    SqFt = str_remove_all(SqFt, ","),  # Remove commas
    SqFt = case_when(
      str_detect(SqFt, "-") ~ as.numeric(str_extract(SqFt, "^[0-9]+")),
      TRUE ~ as.numeric(SqFt)
    ),
    # City Column: I decided to just make a new column "titled city" that was the address column is still there but I have just the city in a seperate column
    City = str_split_fixed(Address, ",", 3)[, 2]
  ) |>
  # If beds or baths is 0, remove the row
  filter(Beds != 0, Baths != 0)
head(Rent_Clean)

```

# Numerical & Categorical Summaries

I decided to look at the data by grouping by County and housing Type. As shown below, the number of observations are not equally proportioned to each other and must be taken into account later when creating models.

```{r}
Rent_Clean|>
  tabyl(County,Type)|>
    adorn_totals(c("row", "col"))
```

Showing the different between mean and median and i can clearly see that there is one or two outliers within LA and OC ( spolier it was more then 1 or two)

```{r}
Rent_Clean |>
  group_by(County)|>
  summarize(mean_price = mean(Price, na.rm = TRUE), 
            median_price = median(Price, na.rm = TRUE))

```

Using quartiles (top 25% and bottom 75%) I was able to choose a lower bound and upper bound to then find the outliers. As seen the table below– the outliers are way outside of usually rent price. (One of wich you can see is an address near disneyland and that may e a reason why its nots neccessairyl near the price of what is the normal)\
(may deal with map plotting using ggplot)\
I may make the decisison to completely remove these outlier due to the fact that they are practically relvant to my overall research question.

```{r}
outliers <- Rent_Clean |>
  group_by(County) |>
  mutate(
    Q1 = quantile(Price, 0.25),
    Q3 = quantile(Price, 0.75),
    IQR = Q3 - Q1,
    lower_bound = Q1 - 2 * IQR,
    upper_bound = Q3 + 2 * IQR
  ) |>
  filter(Price < lower_bound | Price > upper_bound)
print(outliers)
```

Now making a summarized table of all the prices and SqFtoage. I made sure to group by County and housing type so that was were observign a total of 9 variables.

```{r}
Summary_table <- Rent_Clean|>
  group_by(County, Type)|>
  mutate(price_per_sqft = Price / SqFt) |>
  summarize(
    mean.price= round(mean(Price)),
    mean.SqFt= round(mean(SqFt)),
    mean.beds= round(mean(Beds)),
    mean.baths=round(mean(Baths)),
    mean_price_per_sqft = mean(price_per_sqft),
    .groups = "drop"  )
print(Summary_table)
```

giving a bargrpah just for a visual of average price grouped by county and housing type

```{r}
#looking at a ggplot of numerical analysis
summary_table <- Rent_Clean |>
  group_by(County, Type) |>
  summarize(
    mean.price = round(mean(Price, na.rm = TRUE)),
    .groups = "drop"
  )

ggplot(summary_table, aes(x = interaction(County, Type), y = mean.price, fill = County)) +
  geom_col() +
  scale_fill_manual(values=c("RIV"="#084B83","OC"="#FF66B3","LA"="#42BFDD"))+
  labs(
    title = "Average Rent Price by County and Type",
    x = "County & Type",
    y = "Average Rent Price"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

Finding correlation between Price and beds/baths/SqFt. NOTE: correlation doesn't totally explain causation. but this code chunk does go over the fact that beds, baths, and sqft does in fact increase the price in a posistive proportion.

```{r}
# correlation analysis between price and beds
Rent_Clean|>
  group_by(County)|>
  summarise(
Bed_cor=cor(Price, Beds), 
Baths_cor=cor(Price, Baths), 
SqFt_cor=cor(Price, SqFt))
```

# Whats the question I'm trying to answer?

For this project, I want to approach rental affordability from a personal angle, while keeping it general enough that others could adapt it to their own situations. My main question is: **What rental listings offer the best value given a specific salary?** It’s a broad question, but the goal is to make it practical and grounded in real-life decision-making.

A common rule of thumb is that individuals shouldn’t spend more than 30% of their income on rent. Based on this, I’ll introduce a **salary** variable to simulate what someone can realistically afford. This variable will help filter out listings that exceed that 30% income threshold.

To make the analysis more flexible, especially for listings with multiple bedrooms, I’m assuming that shared housing is an option. That means I’ll consider a unit affordable if the **rent per bedroom** is within 30% of a person’s monthly income. This way, I can include multi-bedroom apartments that might be affordable when split among roommates.

```{r}
salary <- 60000  # yearly salary
monthly_income <- salary / 12 #calculating monthly paycheck assuming monthly rent payments
max_rent_per_room <- (monthly_income * 0.30) #allowing only 30% of income to be sued for rent
Rent_Clean_Affordable <- Rent_Clean |>
  mutate(
    rent_per_room = Price / Beds,
    affordable = rent_per_room <= max_rent_per_room
  )|>
  filter(affordable== TRUE)
```

# Deciding what listings are better for their price

now i have to deciede whether or not a listing it worth its value. we can begin by looking at SqFt per Price to determine if you getting the most space out of your value.

```{r}
Rent_Clean_Affordable|>
  mutate( 
  sqft_per_dollar = SqFt / Price
  )|>
arrange(desc(sqft_per_dollar))
```

# Investigating Listings

even after all my data cleaning... this listing got thru. I decided to investigate it for the heck of it.

**217 E 29th St Unit 217 And 217 1 2, Los Angeles, CA 90011:** Upon further investigation. This is a listing for 2 units with a total of 4 beds and 4 baths. Meaning each unit has 2 beds and 2 baths. Then the listing explains how each bedroom can house 2-3 people meaning acording to my code, rent cost would only be about \$187 a month give or take a roomate or two. As GREAT of a rent price this seems. the listing is just all sorts of sketchy and im unfortunately, not interested.

**Rental Description:** Our brand new, all-inclusive shared rooms are move-in ready just bring your bag and settle into comfort, convenience, and community in the heart of the city. All-inclusive rates starting at just \$700/month only 2-3 person per room ! Move in today stay as long or as little as you need All utilities Wi-Fi included Weekly cleaning of shared spaces Private ensuite bathrooms in most rooms On-site laundry for easy living Street & paid parking available On-site manager for support when you need it No credit checks. No deposits. No SSN. Just a valid ID from any country.Spots are limited and going fast message now and claim your bed today!"

![bedroom](images/bedroom.jpg)

# Creating a Value Score
