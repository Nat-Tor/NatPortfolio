[
  {
    "objectID": "FlowerProject.html",
    "href": "FlowerProject.html",
    "title": "Modeling Encelia Species Project",
    "section": "",
    "text": "Show code\nlibrary(here)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(rsample)\nlibrary(purrr)\nlibrary(yardstick)\nlibrary(tidyr)\nlibrary(gt)\nlibrary(broom)"
  },
  {
    "objectID": "FlowerProject.html#what-is-logistic-regression",
    "href": "FlowerProject.html#what-is-logistic-regression",
    "title": "Modeling Encelia Species Project",
    "section": "What is logistic regression?",
    "text": "What is logistic regression?\nLogistic regression is a statistical modeling technique used to predict the probability of an event occurring. In our case, it predicts the probability that a flower belongs to a particular species. Logistic regression uses the logistic function to ensure predictions fall between 0 and 1, representing the likelihood of the flower being classified as one species or the other."
  },
  {
    "objectID": "FlowerProject.html#why-are-you-doing-logistic-regression",
    "href": "FlowerProject.html#why-are-you-doing-logistic-regression",
    "title": "Modeling Encelia Species Project",
    "section": "Why are you doing logistic regression?",
    "text": "Why are you doing logistic regression?\nI’m using logistic regression to classify the species of the Encelia flower based on their measured traits, like number of rays, disk diameter, ray diameter, and stem length. Since there are just two species (Californica vs. Farinosa), logistic regression helps me model how these traits relate to the chance that a flower belongs to one species or the other. This way, I can figure out which traits matter most for telling them apart and predict the species of new flowers based on their measurements.\n\n\nShow code\nencelia_prediction &lt;- function(split){\n  train &lt;- analysis(split)\n  valid &lt;- assessment(split)\n  \n  glm_all &lt;- glm(Species ~ number_rays + disk_diameter + ray_diameter + stem_length, data = train, family = \"binomial\")\n  glm_stemray &lt;- glm(Species ~ stem_length + ray_diameter, data = train, family = \"binomial\")\n  glm_null &lt;- glm(Species ~ 1, data = train, family = \"binomial\")\n  valid_predictions &lt;- valid |&gt;\n    mutate(\n      pred_all = predict(glm_all, newdata = valid, type = \"response\"),\n      pred_stemray = predict(glm_stemray, newdata = valid, type = \"response\"),\n      pred_null = predict(glm_null, newdata = valid, type = \"response\")\n    )\n  return(valid_predictions)\n}"
  },
  {
    "objectID": "FlowerProject.html#why-did-you-choose-each-model-that-you-are-considering",
    "href": "FlowerProject.html#why-did-you-choose-each-model-that-you-are-considering",
    "title": "Modeling Encelia Species Project",
    "section": "Why did you choose each model that you are considering?",
    "text": "Why did you choose each model that you are considering?\nI picked three models to see how well different traits can predict the species.\nAll traits model (pred_all): This one uses all the traits we measured (rays, disk diameter, ray diameter, and stem length) to see how well the full set works for telling the species apart.\nRays and stem length model (pred_stemray): I chose just rays and stem length because those showed the biggest differences between the species in the data. This simpler model checks if these two key traits alone can still make good predictions.\nNull model (pred_null): This one doesn’t use any traits at all. It just guesses based on how common each species is. It’s a baseline to compare the other models against.\nBy comparing these, I can figure out which traits really matter and if the simpler model does almost as well as the full one."
  },
  {
    "objectID": "FlowerProject.html#why-are-you-using-cross-validation-how-does-it-work",
    "href": "FlowerProject.html#why-are-you-using-cross-validation-how-does-it-work",
    "title": "Modeling Encelia Species Project",
    "section": "Why are you using cross-validation? How does it work?",
    "text": "Why are you using cross-validation? How does it work?\nI’m using cross-validation to see how well my models will work on new data they haven’t seen before. Instead of just testing on the same data the model was trained on, cross-validation splits the data into chunks (called folds) and tests the model on each chunk while training it on the rest.\n\n\nShow code\nset.seed(1)\nencelia_cv &lt;- vfold_cv(\n  encelia_train, \n  v = 4\n  )\n\n\n\n\nShow code\nmapped_predictions &lt;- map(\n  encelia_cv$splits,\n  encelia_prediction\n)\nmapped_predictions_df &lt;- mapped_predictions|&gt;\n  bind_rows(\n    .id = \"fold\"\n  )\nmapped_predictions_df|&gt;\n  select(Species, fold, pred_all, pred_stemray, pred_null)\n\n\n# A tibble: 79 × 5\n   Species     fold   pred_all pred_stemray pred_null\n   &lt;fct&gt;       &lt;chr&gt;     &lt;dbl&gt;        &lt;dbl&gt;     &lt;dbl&gt;\n 1 Californica 1      2.22e-16      0.0317      0.458\n 2 Californica 1      2.22e-16      0.0720      0.458\n 3 Californica 1      2.22e-16      0.0185      0.458\n 4 Californica 1      2.22e-16      0.00106     0.458\n 5 Californica 1     NA            NA           0.458\n 6 Californica 1      2.22e-16      0.0354      0.458\n 7 Farinosa    1      1   e+ 0      0.986       0.458\n 8 Farinosa    1      2.22e-16      0.286       0.458\n 9 Farinosa    1      2.22e-16      0.920       0.458\n10 Farinosa    1      1   e+ 0      0.955       0.458\n# ℹ 69 more rows\n\n\nShow code\npred_all &lt;- mapped_predictions_df |&gt;\n  pivot_longer(\n    cols = starts_with(\"pred\"),\n    names_to = \"model\",\n    values_to = \".pred_Farinosa\"\n  ) |&gt;\n  mutate(\n    .pred_Californica = 1 - .pred_Farinosa\n  )\n\npred_all |&gt;\n  select(Species, model, fold, .pred_Californica, .pred_Farinosa)\n\n\n# A tibble: 237 × 5\n   Species     model        fold  .pred_Californica .pred_Farinosa\n   &lt;fct&gt;       &lt;chr&gt;        &lt;chr&gt;             &lt;dbl&gt;          &lt;dbl&gt;\n 1 Californica pred_all     1                 1           2.22e-16\n 2 Californica pred_stemray 1                 0.968       3.17e- 2\n 3 Californica pred_null    1                 0.542       4.58e- 1\n 4 Californica pred_all     1                 1           2.22e-16\n 5 Californica pred_stemray 1                 0.928       7.20e- 2\n 6 Californica pred_null    1                 0.542       4.58e- 1\n 7 Californica pred_all     1                 1           2.22e-16\n 8 Californica pred_stemray 1                 0.981       1.85e- 2\n 9 Californica pred_null    1                 0.542       4.58e- 1\n10 Californica pred_all     1                 1           2.22e-16\n# ℹ 227 more rows\n\n\n\n\nShow code\nbrier_all_models &lt;- pred_all |&gt;\n  group_by(model, fold) |&gt;\n  brier_class(\n    truth = Species,\n    .pred_Californica\n  )\nbrier_summary &lt;- brier_all_models |&gt;\n  ungroup() |&gt;\n  group_by(model) |&gt;\n  summarize(\n    mean_brier = mean(.estimate),     \n    se_brier = sd(.estimate) / sqrt(n())  \n  ) |&gt;\n  arrange(mean_brier)\nbrier_summary|&gt;\n  gt() |&gt;\n  tab_header(title = \"Model Comparison\") |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_stylize(style = 6, color = \"green\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(20),\n    heading.subtitle.font.size = px(14),\n    data_row.padding = px(3),\n    table.width = pct(100)\n  )\n\n\n\n\n\n\n\n\nModel Comparison\n\n\nmodel\nmean_brier\nse_brier\n\n\n\n\npred_stemray\n0.1023426\n0.014271252\n\n\npred_all\n0.1233803\n0.055310803\n\n\npred_null\n0.2598904\n0.004411057\n\n\n\n\n\n\n\nBased on the Brier score, I’m choosing the pred_stemray model as the best one. It had the lowest average Brier score (0.1023), meaning its predicted probabilities were the closest to the actual species. It also had a low standard error (0.0143), which shows the model performed consistently across the different data splits. This model only uses ray count and stem length (the two traits with the biggest differences between species) so it’s both accurate and easy to understand."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Natalie Torres Portfolio",
    "section": "",
    "text": "Hi, I’m Natalie Torres — a statistics major at Cal State Fullerton. This portfolio showcases my projects. Currently a work in progress :D\n\nGitHub: @Nat-Tor\nLinkedIn: Natalie Torres\n\n\n\n\n\nSoCalRent Analysis"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Natalie Torres Portfolio",
    "section": "",
    "text": "Hi, I’m Natalie Torres — a statistics major at Cal State Fullerton. This portfolio showcases my projects. Currently a work in progress :D\n\nGitHub: @Nat-Tor\nLinkedIn: Natalie Torres"
  },
  {
    "objectID": "index.html#projects",
    "href": "index.html#projects",
    "title": "Natalie Torres Portfolio",
    "section": "",
    "text": "SoCalRent Analysis"
  },
  {
    "objectID": "SoCalRentProject.html",
    "href": "SoCalRentProject.html",
    "title": "Rent in Southern California",
    "section": "",
    "text": "Objective\nMy goal is to take a broad look at the rental market across these Southern California counties. I want to explore what each county offers in terms of rent and identify any trends that emerge from the listings. Specifically, I’m interested in how different priorities (square footage, number of bedrooms and bathrooms, or overall price) affect where someone might choose to rent.\nI understand that preferences vary, so rather than claiming one county is “best,” my goal is to highlight the trends I observe in each area and offer insights into what renters might expect based on their needs.\n\n\nPackages Used and Data Import\n\n\nShow code\nlibrary(readr)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(scales)\nlibrary(broom)\nhere::i_am(\"NatsPortfolio/SoCalRentProject.qmd\")\nSoCalRent &lt;- read_csv(here::here(\"NatsPortfolio/ProjectData/SoCalDataRaw_2025.csv\"))\n\n\n\n\nData Collection\nFinding clean and usable public data turned out to be more challenging than expected. After exploring several sites, I’ve decided to use Redfin. I then relied on Excel’s web tools to auto-generate tables directly from listing URLs. For each listing, I’ve included the Price($), Numbers of Bathrooms and Bedrooms, Square Footage, Address, Housing Type, and County. I focused on three Southern California counties: Orange County(OC), Riverside County(RIV), and Los Angeles County(LA). Across the three counties, I gathered data on three different property types: houses, condos, and apartments. While the raw data I pulled was relatively structured, it still required some cleaning.\n\n\nShow code\nSoCalRent |&gt;\n  head() |&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Sample of Rent Listings Data\"\n  ) |&gt;\n  cols_label(\n    Price = \"Rent ($)\",\n    Beds = \"Bedrooms\",\n    Baths = \"Bathrooms\",\n    SqFt = \"Square Footage\",\n    Address = \"Address\",\n    Type = \"Housing Type\",\n    County = \"County\"\n  ) |&gt;\nopt_stylize(style = 6, color = \"cyan\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(18),\n    table.width = pct(100))\n\n\n\n\n\n\n\n\nSample of Rent Listings Data\n\n\nRent ($)\nBedrooms\nBathrooms\nSquare Footage\nAddress\nHousing Type\nCounty\n\n\n\n\n$3,195/mo\n4 beds\n2.5 baths\n1668.00\n4001 Landau Ct, Riverside, CA 92501\nhouse\nRIV\n\n\n$4,000/mo\n4 beds\n2 baths\n2200.00\n18590 Roberts Rd, Riverside, CA 92508\nhouse\nRIV\n\n\n$2,300/mo\n2 beds\n1 bath\n900.00\n3468 Wallace St, Jurupa Valley, CA 92509\nhouse\nRIV\n\n\n$3,449/mo\n3 beds\n2.5 baths\n1,970\n531 Atwood Ct, Riverside, CA 92506\nhouse\nRIV\n\n\n$1,850/mo\n1 bed\n1 bath\n400\n2767 Attenborough Dr, Riverside, CA 92503\nhouse\nRIV\n\n\n$1,950/mo\n1 bed\n1 bath\n440\n10671 Sagittarius Dr, Riverside, CA 92503\nhouse\nRIV\n\n\n\n\n\n\n\n\n\nData Wrangling\nThere were a few listings with missing data in certain columns, so for the sake of sanity, I just removed them.\nPrice came in various formats (e.g., $3,185/mo, $1940+/mo), so I removed dollar signs, commas, and plus signs, then converted the column to numeric.\nBeds and Baths also had inconsistent formats like 1 bed, 3 beds, or even ranges like 2–4 beds. I stripped out the words “bed(s)” and “bath(s)”, and for ranges, I took the smallest number. Both columns were then converted to numeric.\nSqFt was the messiest. It appeared as 1668.00, 1,970, or ranges like 410–480. I removed commas and decimal points (since I didn’t need the .00), and again, for ranges, I used the lower bound. This column was also converted to numeric.\nFor the address column, I kept it in case I wanted to refer to the full address later. But I also extracted just the city name into a separate column in case I wanted to analyze trends by city.\nLastly, I removed any listings where either Beds or Baths were equal to zero. This may affect apartment listing as it would have removed any studios that don’t have bedrooms.\nAfter cleaning, I was left with 278 observations out of the original 333.\n\n\nShow code\nRent_Clean &lt;- SoCalRent |&gt;\n  #cleaning out any listings that have any empty data for the sake of my sanity\n  filter(!is.na(Price), !is.na(Beds), !is.na(Baths), !is.na(SqFt), !is.na(Address), !str_starts(SqFt, \"—\")) |&gt;\n  mutate(\n  # Price column: remove any $, +, /mo and change it to a numeric variable\n  Price = str_remove_all(Price, \"\\\\$|,|/mo|\\\\+\"),\n  Price = as.numeric(Price),\n  # Beds column: take the smallest number of beds and change it to a numeric variable\n  Beds = str_extract(Beds, \"^\\\\d+\"),\n  Beds = as.numeric(Beds),\n  # Baths column: take the smallest number of baths and change it to a numeric variable\n  Baths = str_extract(Baths, \"^\\\\d+(\\\\.\\\\d+)?\"),\n  Baths = as.numeric(Baths),\n  # SqFt column: takeing the first number from ranges, removes and commas or dashes and change it to a numeric variable\n  SqFt = str_remove_all(SqFt, \",\"),  # Remove commas\n  SqFt = case_when(str_detect(SqFt, \"-\") ~ as.numeric(str_extract(SqFt, \"^[0-9]+\")), TRUE ~ as.numeric(SqFt)),\n  # City Column: I decided to just make a new column \"City\"\n  City = str_split_fixed(Address, \",\", 3)[, 2]\n  ) |&gt;\n  # If beds or baths is 0, remove the row\n  filter(Beds != 0, Baths != 0)\n\n\n\n\nShow code\nRent_Clean |&gt;\n  head() |&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Sample of Clean Rent Listings Data\"\n  ) |&gt;\n  cols_label(\n    Price = \"Rent ($)\",\n    Beds = \"Bedrooms\",\n    Baths = \"Bathrooms\",\n    SqFt = \"Square Feet\",\n    Address = \"Address\",\n    Type = \"Housing Type\",\n    County = \"County\",\n    City = \"City\"\n  ) |&gt;\nopt_stylize(style = 6, color = \"cyan\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(18),\n    table.width = pct(100))\n\n\n\n\n\n\n\n\nSample of Clean Rent Listings Data\n\n\nRent ($)\nBedrooms\nBathrooms\nSquare Feet\nAddress\nHousing Type\nCounty\nCity\n\n\n\n\n3195\n4\n2.5\n1668\n4001 Landau Ct, Riverside, CA 92501\nhouse\nRIV\nRiverside\n\n\n4000\n4\n2.0\n2200\n18590 Roberts Rd, Riverside, CA 92508\nhouse\nRIV\nRiverside\n\n\n2300\n2\n1.0\n900\n3468 Wallace St, Jurupa Valley, CA 92509\nhouse\nRIV\nJurupa Valley\n\n\n3449\n3\n2.5\n1970\n531 Atwood Ct, Riverside, CA 92506\nhouse\nRIV\nRiverside\n\n\n1850\n1\n1.0\n400\n2767 Attenborough Dr, Riverside, CA 92503\nhouse\nRIV\nRiverside\n\n\n1950\n1\n1.0\n440\n10671 Sagittarius Dr, Riverside, CA 92503\nhouse\nRIV\nRiverside\n\n\n\n\n\n\n\n\n\nExploratory Data Analysis\nI analyzed the data by grouping listings by County and Housing Type.\nOverall, most listings were houses. Riverside County had the highest number of apartment listings, while Orange County had the most condo listings. When it comes to house listings, Riverside and Los Angeles counties were tied for the highest count.\n\n\nShow code\nRent_Clean |&gt;\n  count(Type, County) |&gt;\n  ggplot(aes(x = Type, y = n, fill = County)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.8)) +\n  geom_text(aes(label = n), \n            position = position_dodge(width = 0.8), \n            vjust = -0.3, size = 3) +\n  scale_fill_manual(\n  values = c(\"LA\" = \"#005596\", \"OC\" = \"#FF6720\", \"RIV\" = \"#FFB81C\")\n)+\n  labs(\n    title = \"Most Common Housing Types by County\",\n    x = \"Housing Type\", \n    y = \"Number of Listings\"\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"top\",\n    text = element_text(size = 16),             \n    axis.title = element_text(size = 18),        \n    axis.text = element_text(size = 14),         \n    plot.title = element_text(size = 18, face = \"bold\"),\n    legend.title = element_text(size = 16),     \n    legend.text = element_text(size = 14)   \n  )\n\n\n\n\n\n\n\n\n\nNext, I made a table showing the average and median rent prices by county and housing type. As expected, apartments were the most affordable option across all counties, with Riverside having the lowest average price. On the other end, houses in Orange County stood out as the most expensive, with an average rent of $7,388. Condo prices varied widely, suggesting a mix of both luxury and more affordable units across different areas.\nIt was important to notice the difference between average and median values. This indicates that there exists high-priced outliers that are skewing the averages. Median values offer a better sense of typical rent prices.\n\n\nShow code\nsummary_table &lt;- Rent_Clean |&gt;\n  group_by(County, Type)|&gt;\n  summarize(mean.price = round(mean(Price, na.rm = TRUE)), \n            median.price = median(Price, na.rm = TRUE),\n            .groups = \"drop\")\nsummary_table |&gt;\n  arrange(desc(mean.price))|&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Average Rent Price by County and Type\") |&gt;\n  fmt_currency(\n    columns = c(mean.price, median.price),\n    currency = \"USD\",\n    decimals = 0) |&gt;\n  cols_label(\n    County = \"County\",\n    Type = \"Housing Type\",\n    mean.price = \"Average Rent\",\n    median.price = \"Median Price\") |&gt;\n  data_color(\n    columns = c(mean.price),\n    colors = col_numeric(\n      palette = c(palette = c(\"#2ecc71\", \"#f1c40f\", \"#e74c3c\")),\n      domain = NULL\n    )\n  ) |&gt;\n  cols_align(align = c(\"left\"))|&gt;\n  opt_stylize(style = 6, color = \"gray\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(20),\n    heading.subtitle.font.size = px(14),\n    data_row.padding = px(3),\n    table.width = pct(100))\n\n\n\n\n\n\n\n\nAverage Rent Price by County and Type\n\n\nCounty\nHousing Type\nAverage Rent\nMedian Price\n\n\n\n\nOC\nhouse\n$7,388\n$6,850\n\n\nLA\nhouse\n$6,547\n$5,995\n\n\nOC\ncondo\n$4,385\n$4,000\n\n\nLA\ncondo\n$3,673\n$3,500\n\n\nLA\napartment\n$3,525\n$2,950\n\n\nRIV\nhouse\n$3,169\n$3,400\n\n\nOC\napartment\n$2,595\n$2,535\n\n\nRIV\ncondo\n$2,479\n$2,400\n\n\nRIV\napartment\n$1,885\n$1,865\n\n\n\n\n\n\n\nTo better visualize the distribution of rent prices and identify outliers, I created a boxplot grouped by County and Housing Type. The red dots represent outlier listings, which are values that fall significantly above the average rent range.\nThis visualization shows that Orange County and Los Angeles have several high-priced outliers, particularly for houses and condos. These extreme values help explain why the average rent is much higher than the median in those areas.\n\n\nShow code\nRent_Clean |&gt; \n  ggplot(aes(x = Type, y = Price, fill = County)) +\n  geom_boxplot(outlier.shape = 16, outlier.colour = \"#e74c3c\", outlier.size = 3) +\n  labs(\n    title = \"Rent Price Distribution by County and Housing Type\",\n    x = \"County\",\n    y = \"Rent Price ($)\"\n  ) +\n  scale_fill_manual(\n    values = c(\"LA\" = \"#005596\", \"OC\" = \"#FF6720\", \"RIV\" = \"#FFB81C\")\n  ) +\n  scale_y_continuous(trans = \"log10\") +  # Log scale to reduce skew\n  theme_light() +\n  theme(\n    legend.position = \"top\",\n    text = element_text(size = 16),             \n    axis.title = element_text(size = 18),        \n    axis.text = element_text(size = 14),         \n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 16),     \n    legend.text = element_text(size = 14)   \n  )\n\n\n\n\n\n\n\n\n\nThese patterns in the number of listings and rent prices reveal the differences in the housing market across Southern California. Riverside’s high number of apartment listings and lower average rents point to its role as a more affordable and accessible housing market. Riverside has few outliers, suggesting more consistency in pricing and older/cheaper properties.\nIn contrast, Los Angeles and Orange County show multiple high-end outliers, especially for houses and condos, which increase the average prices. These outliers hint at the presence of luxury markets or high-demand neighborhoods.\n\n\nHow to define what gets filtered\nFor this project, I want to approach rental affordability from a personal angle, while keeping it general enough that others could adapt it to their own situations. A common rule of thumb is that individuals shouldn’t spend more than 30% of their income on rent. Based on this, I’ll introduce a salary variable to simulate what someone can realistically afford. This variable will help filter out listings that exceed that 30% income threshold.\nTo make the analysis more flexible, especially for listings with multiple bedrooms, I’m assuming that shared housing is an option. That means I’ll consider a unit affordable if the rent per bedroom is within 30% of a person’s monthly income. This way, I can include multi-bedroom housing options that might be affordable when split among roommates.\n\n\nShow code\nsalary &lt;- 60000  # random yearly salary\nmonthly_income &lt;- salary / 12 #calculating monthly paycheck assuming monthly rent payments\nmax_rent &lt;- (monthly_income * 0.30) #only 30% of income to be used for rent\nRent_Clean_Affordable &lt;- Rent_Clean |&gt; #filter out to only include the affordable listings\n  mutate(\n    rent_per_room = Price / Beds, #allowing for roomates\n    affordable = rent_per_room &lt;= max_rent #makes logical\n  )|&gt;\n  filter(affordable== TRUE) #filter\nsummary_affordable &lt;- Rent_Clean_Affordable |&gt; #making a new mean/median table but consider affordability\n  group_by(County, Type)|&gt;\n  summarize(mean.price = round(mean(Price, na.rm = TRUE)), \n            median.price = median(Price, na.rm = TRUE),\n            .groups = \"drop\")\nsummary_affordable |&gt; #make a new visually appealing table\n  arrange(desc(mean.price))|&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Average Rent Price by County and Type\") |&gt;\n  fmt_currency(\n    columns = c(mean.price, median.price),\n    currency = \"USD\",\n    decimals = 0) |&gt;\n  cols_label(\n    County = \"County\",\n    Type = \"Housing Type\",\n    mean.price = \"Average Rent\",\n    median.price = \"Median Price\") |&gt;\n  data_color(\n    columns = c(mean.price),\n    colors = col_numeric(\n      palette = c(palette = c(\"#2ecc71\", \"#f1c40f\", \"#e74c3c\")),\n      domain = NULL\n    )\n  ) |&gt;\n  cols_align(align = c(\"left\"))|&gt;\n  opt_stylize(style = 6, color = \"gray\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(20),\n    heading.subtitle.font.size = px(14),\n    data_row.padding = px(3),\n    table.width = pct(100))\n\n\n\n\n\n\n\n\nAverage Rent Price by County and Type\n\n\nCounty\nHousing Type\nAverage Rent\nMedian Price\n\n\n\n\nLA\nhouse\n$4,360\n$4,400\n\n\nOC\nhouse\n$4,211\n$4,098\n\n\nOC\ncondo\n$3,630\n$3,958\n\n\nRIV\nhouse\n$3,369\n$3,450\n\n\nLA\ncondo\n$3,276\n$3,500\n\n\nLA\napartment\n$2,970\n$2,798\n\n\nOC\napartment\n$2,775\n$2,775\n\n\nRIV\ncondo\n$2,568\n$2,542\n\n\nRIV\napartment\n$1,926\n$1,950\n\n\n\n\n\n\n\nAfter adding the salary variable, I was able to realistically filter out the extreme outliers. After removing these high rent listings the average rent moved closer to the median. This suggests that the original averages were heavily influenced by a small number of expensive listings.\nThis adjustment is especially important for model building. By filtering out outliers, we create a dataset that better represents the usual trends, making our model more reliable.\n\n\nMultiple Linear Regression Model\nI made a multiple linear regression model to analyze how rent prices in Southern California are influenced by factors including county, housing type, number of bedrooms, bathrooms, and square footage. The model reveals several important relationships.\n\n\nShow code\nrent_model &lt;- lm(Price ~ County + Type + SqFt + Beds + Baths, \n                 data = Rent_Clean_Affordable) #the model :D\nrent_model_table &lt;- rent_model |&gt; tidy() #the model into table\n\nrent_model_table &lt;- rent_model_table |&gt; #mutate p.val to highlight significance\n  mutate(p.value = case_when(\n    p.value &lt;= 0.05 ~ \"≤ 0.05\",    # Highly significant\n    p.value &gt; 0.05 ~ \"&gt; 0.05\",     # Non-significant\n    TRUE ~ as.character(p.value)\n  ),\n  Change_Price = case_when( #highlight changes in price\n    estimate &gt; 0 ~ \"increase\",  # Positive coefficient (increase)\n    estimate &lt; 0 ~ \"decrease\",  # Negative coefficient (decrease)\n    TRUE ~ \"neutral\"            # Neutral\n  ))\n\nrent_model_table |&gt; #make pretty table\n  gt() |&gt;\n  tab_header(\n    title = \"Regression Results for Rent Model\"\n  ) |&gt;\n  cols_label(\n    term = \"Variable\",\n    estimate = \"Estimate\",\n    std.error = \"Standard Error\",\n    statistic = \"t-Statistic\",\n    p.value = \"p-Value\",\n    Change_Price = \"Change in Price\"\n  ) |&gt;\n  tab_spanner(\n    label = \"Coefficients\",\n    columns = c(estimate, std.error, statistic, p.value)\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"#2ecc71\"),\n    locations = cells_body(columns = vars(estimate), \n                           rows = Change_Price == \"increase\")\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"#e74c3c\"),\n    locations = cells_body(columns = vars(estimate), \n                           rows = Change_Price == \"decrease\")\n  ) |&gt;\n    tab_style(\n    style = cell_text(color = \"#e74c3c\"),\n    locations = cells_body(columns = vars(p.value), \n                           rows = p.value == \"&gt; 0.05\") #heavy sig\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"#2ecc71\"),\n    locations = cells_body(columns = vars(p.value),  #non sig\n                           rows = p.value == \"≤ 0.05\")\n  ) |&gt;\n   cols_align(align = c(\"left\"))|&gt;\nopt_stylize(style = 6, color = \"gray\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(18),\n    table.width = pct(100))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRegression Results for Rent Model\n\n\nVariable\n\nCoefficients\n\nChange in Price\n\n\nEstimate\nStandard Error\nt-Statistic\np-Value\n\n\n\n\n(Intercept)\n1028.1934539\n219.212166\n4.6904032\n≤ 0.05\nincrease\n\n\nCountyOC\n188.9374670\n143.341713\n1.3180913\n&gt; 0.05\nincrease\n\n\nCountyRIV\n-718.4149778\n111.538787\n-6.4409431\n≤ 0.05\ndecrease\n\n\nTypecondo\n73.2123135\n172.780024\n0.4237314\n&gt; 0.05\nincrease\n\n\nTypehouse\n401.2195019\n188.448517\n2.1290669\n≤ 0.05\nincrease\n\n\nSqFt\n-0.1666292\n0.155018\n-1.0749019\n&gt; 0.05\ndecrease\n\n\nBeds\n844.4871509\n97.993519\n8.6177857\n≤ 0.05\nincrease\n\n\nBaths\n70.5854399\n108.488020\n0.6506289\n&gt; 0.05\nincrease\n\n\n\n\n\n\n\nAn apartment in LA is our baseline. Listings in the OC area are higher than LA (by $189) but it is not statistically significant. Listing in the Riverside area tend to cost less than in Los Angeles, this difference is statistically significant.\nThe number of bedrooms had the strongest and most statistically significant association with rent. Each additional bedroom increases rent by approximately $844 on average. Baths are not as statistically significant only increasing rent by $70.\nHouses rent for approximately $401 more than apartments but shown by the model, doesn’t have. Condos are not statistically significant, only increasing rent by $73.\nAlthough Square Footage is often expected to impact rent, in this model it is not accurate. Suggesting other factors may play a bigger role (i.e. bedrooms). This model can indicate that the number of bedrooms may play a more important role in rent pricing than square footage, possibly because people value how many individuals a space can house more than the size itself.\n\n\nShow code\nPrediction &lt;- rent_model|&gt;\n  augment( newdata= Rent_Clean_Affordable)\n# Plot the residuals\nggplot(data = Prediction, aes(x = .resid)) +\n  geom_histogram(bins = 10, fill = \"#005596\", color = \"black\", alpha = 0.8) +\n  labs(title = \"Histogram of Residuals\",\n       x = \"Residuals\",\n       y = \"Frequency\") +\n  theme_light() +\n  theme(\n    legend.position = \"top\",\n    text = element_text(size = 16),             \n    axis.title = element_text(size = 18),        \n    axis.text = element_text(size = 14),         \n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 16),     \n    legend.text = element_text(size = 14)   \n  )\n\n\n\n\n\n\n\n\n\nThis histogram visualizes the distribution of residuals from the multiple linear regression model. The residuals are mostly centered around zero, indicating that the model generally makes accurate predictions. However, there is a slight skew to the left, suggesting that the model tends to overestimate rent prices for a number of listings.\n\n\nConclusion\nAfter exploring the data using multiple methods, I was able to uncover key housing trends across each of the Southern California counties. As someone who has lived here for over 20 years, many of these patterns align with my lived experience but it’s pretty cool to see data analytics prove what me and other locals often see.\nLos Angeles (LA):\nAs expected, LA is a heavily populated area and has some of the highest rent prices. The correlation analysis shows that square footage has a stronger impact on rent in LA, likely due to the high demand and limited space (many people, not much room). The histogram also reveals a right-skewed distribution, with prices trailing into the more expensive range, reinforcing the idea of LA as a competitive and costly housing market.\nRiverside (RIV):\nRiverside’s histogram displays lower rent values. Its status as an older, more suburban region contributes to its relative affordability. The correlation table shows a balanced influence from the number of beds, baths, and square footage on pricing. This suggests that Riverside follows more predictable pricing patterns. It reflects a suburban area offering more consistent and accessible housing options.\nOrange County (OC):\nUnlike LA and Riverside, Orange County’s histogram doesn’t show a clear skew, indicating a wide spread of rent prices. This suggests a mix of older, more affordable homes and newer, high-end properties. The weaker correlation between basic housing features and rent price implies that other external factors (school quality, neighborhood amenities, community in general) may play a more important role in determining rent in Orange County.\n\n\nShow code\ncorrelation_table &lt;- Rent_Clean |&gt;\n  group_by(County) |&gt;\n  summarise(\n    Bed_cor = cor(Price, Beds), \n    Baths_cor = cor(Price, Baths), \n    SqFt_cor = cor(Price, SqFt)\n  )\ncorrelation_table |&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Correlation of Rent Price with Features by County\"\n  ) |&gt;\n  cols_label(\n    County = \"County\",\n    Bed_cor = \"Price vs Beds\",\n    Baths_cor = \"Price vs Baths\",\n    SqFt_cor = \"Price vs SqFt\"\n  ) |&gt;\n  tab_style(\n    style = cell_text(weight = \"bold\"),\n    locations = cells_column_labels(columns = everything())\n  ) |&gt;\n   cols_align(align = c(\"left\"))|&gt;\nopt_stylize(style = 6, color = \"cyan\") |&gt;\n  tab_options(\n    table.font.size = px(16),\n    heading.title.font.size = px(18),\n    table.width = pct(100))\n\n\n\n\n\n\n\n\nCorrelation of Rent Price with Features by County\n\n\nCounty\nPrice vs Beds\nPrice vs Baths\nPrice vs SqFt\n\n\n\n\nLA\n0.5704509\n0.4944130\n0.7294382\n\n\nOC\n0.4496779\n0.5389367\n0.5983870\n\n\nRIV\n0.9013643\n0.7824197\n0.7990179\n\n\n\n\n\n\n\n\n\nShow code\nRent_Clean |&gt;\n  filter(Price &lt; 10000)|&gt;\n  mutate(County = as.character(County)) |&gt;\n  bind_rows(\n    Rent_Clean_Affordable |&gt;\n      mutate(County = \"All Counties\")\n  ) |&gt;\n  ggplot(aes(x = Price, fill = County)) +\n  geom_histogram(binwidth = 800, color = \"black\") +\n  facet_wrap(~ County, scales = \"free_y\") +\n  labs(\n    title = \"Rent Price Distribution: Overall and by County\",\n    x = \"Rent Price ($)\",\n    y = \"Number of Listings\"\n  ) +\n  scale_fill_manual(\n    values = c(\"LA\" = \"#005596\", \"RIV\" = \"#FFB81C\",\"OC\" = \"#FF6720\", \n      \"All Counties\" = \"gray\" \n    )\n  ) +\n  theme_light() +\n  theme(\n    text = element_text(size = 16),             \n    axis.title = element_text(size = 18),        \n    axis.text = element_text(size = 14),         \n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 16),     \n    legend.text = element_text(size = 14)   \n  )\n\n\n\n\n\n\n\n\n\nWhich brings me back to my objective: Where should someone rent? As mentioned earlier, the answer depends on individual priorities. If you’re looking for consistent affordability, Riverside is a solid choice with its more predictable and accessible pricing. The LA area, while expensive, reflects the appeal and allure of the area beyond just housing. As for Orange County, it’s great for those seeking a balance between affordability and amenities. It offers a mix of options for people who value a comfortable lifestyle with access to good schools, parks, and community features.\nUltimately, there’s no one-size-fits-all answer. Renters must weigh their priorities, whether it’s budget, space, amenities, or proximity to work and culture, in order to find the right fit for them.\n\n\nLimitations\nEven though this project helped uncover some cool insights about rent trends in Southern California, there were a few limitations worth mentioning.\nData Source:\nThe data I used was based on the rental listings available during this time (APR 2025) and like most online listings, they change fast. Some of the ones I pulled were already taken down a couple of weeks later. On top of that, there were some missing or weird values in the dataset. For example, some listings had 0 bedrooms, which probably meant they were studios. But the way the data was structured (and for simplicity as a beginner), I chose to remove them. I remember that decision actually cut out a decent number of apartment listings from LA, which probably skewed the overall picture there a bit.\nModeling Assumptions:\nI used a linear regression model, which assumes a straight-line relationship between things like square footage, beds, and baths, and the rent price. But let’s be real, housing markets are way more complicated than that. There are tons of other factors that influence rent like location, neighborhood vibe, schools, commute times and those things are hard to capture with the dataset I had. So while the model gives us a starting point, it definitely doesn’t tell the whole story.\n\n\nReflection\nThis project was genuinely a lot of fun. Working with real housing data pushed me to practice key skills like data cleaning and wrangling. I felt way more confident in organizing messy data and turning it into something meaningful. I especially enjoyed creating the visuals and being able to actually see the trends and share them in a clear way.\nI also connected with this project on a personal level. I’ve lived in Southern California my whole life, so it was really interesting to analyze an everyday topic like rent through the lens of a data analyst. It helped me understand how prices vary and what factors play a role in shaping the housing landscape across different counties.\nThere were definitely a few more things I would’ve liked to explore or experiment with, but I decided to focus on cleaning and improving the work I already had. Honestly, just being able to turn data into visuals and insights was exciting enough.\n\n\nEXTRA: my favorite weird listings\n217 E 29th St Unit 217 and 217 1/2, Los Angeles, CA 90011: Upon further investigation, this is actually a listing for two units with a total of 4 beds and 4 baths—so 2 beds and 2 baths per unit. The listing also mentions that each bedroom can house 2–3 people. Based on how my code calculates rent per person, that would come out to around $187/month, give or take a roommate or two.\nAs amazing as that rent price sounds, it definitely raises some eyebrows. On the bright side, it could be a legit affordable housing option for someone who really needs it. But on the more skeptical side… the listing gives off some sketchy vibes. Personally, I’m not interested.\nRental Description: Our brand new, all-inclusive shared rooms are move-in ready just bring your bag and settle into comfort, convenience, and community in the heart of the city. All-inclusive rates starting at just $700/month only 2-3 person per room ! Move in today stay as long or as little as you need All utilities Wi-Fi included Weekly cleaning of shared spaces Private ensuite bathrooms in most rooms On-site laundry for easy living Street & paid parking available On-site manager for support when you need it No credit checks. No deposits. No SSN. Just a valid ID from any country.Spots are limited and going fast message now and claim your bed today!”\n\n1313 Disneyland Dr., Anaheim, CA 92802: This listing was up for rent at $30,000/month and completely skewed my average rental price for Orange County. At first, I assumed it was just a fancy condo near Disneyland. But when I looked into it, I realized it was actually inside Disneyland. Weird.\nCurious (and knowing there are plenty of Disneyland superfans out there), I searched Reddit and sure enough, 1313 Disneyland Dr. is the park’s official address. Fun fact: M is the 13th letter of the alphabet, so 1313 = MM = Mickey Mouse. I couldn’t find much else about what this listing actually was.\nThe listing had been up for nearly a year and only got taken down recently on April 30th, 2025. My best guess? Maybe it was the apartment above the fire station that Walt Disney supposedly used. But more realistically, it could’ve been something related to private entertainment or internal use within Disneyland.\nStill, kind of strange that the listing disappeared just two weeks after I pulled the data.\nRental Description: This property is available. Please inquire on this site to schedule a showing. Im sorry, I cant provide a description of this property.Available NOWHeating ForcedAirCooling EvaporativeAppliances Refrigerator, Range Oven, Microwave, DishwasherLaundry In UnitParking Detached Garage, 2 spacesPets Dogs Allowed, Cats AllowedSecurity deposit 30,000.00Included Utilities Garbage, Sewage, LandscapingAdditional DepositPet 500.00This property has a home security system.Disclaimer Ziprent is acting as the agent for the owner. Information Deemed Reliable but not Guaranteed. All information should be independently verified by renter."
  }
]