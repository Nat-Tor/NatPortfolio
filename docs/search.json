[
  {
    "objectID": "SoCalRentProject.html",
    "href": "SoCalRentProject.html",
    "title": "NatsPortfolio",
    "section": "",
    "text": "Before Getting Started\nLoad in packages and data\n\nhere::i_am(\"NatsPortfolio/SoCalRentProject.qmd\")\n\nhere() starts at C:/Users/natal/OneDrive/Desktop\n\n\n\nlibrary(readr)\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(stringr)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.0.4\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nSoCalRent &lt;- read_csv(here::here(\"NatsPortfolio/ProjectData/SoCalDataRaw_2025.csv\"))\n\nRows: 333 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Price, Beds, Baths, SqFt, Address, Type, County\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nGetting the Raw Data\nFinding clean and usable public data turned out to be more challenging than expected. After exploring several sources, I decided to use Redfin as my main platform, and relied on Excel’s web tools to auto-generate tables directly from listing URLs. I focused on three Southern California counties — Orange County, Riverside County, and Los Angeles County.\nFor each county, I gathered data on three different property types: houses, condos, and apartments. While the raw data I pulled was relatively structured, it still required some cleaning.\n\nhead(SoCalRent)\n\n# A tibble: 6 × 7\n  Price     Beds   Baths     SqFt    Address                        Type  County\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;                          &lt;chr&gt; &lt;chr&gt; \n1 $3,195/mo 4 beds 2.5 baths 1668.00 4001 Landau Ct, Riverside, CA… house RIV   \n2 $4,000/mo 4 beds 2 baths   2200.00 18590 Roberts Rd, Riverside, … house RIV   \n3 $2,300/mo 2 beds 1 bath    900.00  3468 Wallace St, Jurupa Valle… house RIV   \n4 $3,449/mo 3 beds 2.5 baths 1,970   531 Atwood Ct, Riverside, CA … house RIV   \n5 $1,850/mo 1 bed  1 bath    400     2767 Attenborough Dr, Riversi… house RIV   \n6 $1,950/mo 1 bed  1 bath    440     10671 Sagittarius Dr, Riversi… house RIV   \n\n\n\n\nData Wrangling\nThere were a few listings with missing data in certain columns, so for the sake of sanity, I just removed them.\nPrice came in various formats (e.g., $3,185/mo, $1940+/mo), so I removed dollar signs, commas, and plus signs, then converted the column to numeric.\nBeds and Baths also had inconsistent formats like 1 bed, 3 beds, or even ranges like 2–4 beds. I stripped out the words “bed(s)” and “bath(s)”, and for ranges, I took the smallest number. Both columns were then converted to numeric.\nSqFt was the messiest. It appeared as 1668.00, 1,970, or ranges like 410–480. I removed commas and decimal points (since I didn’t need the .00), and again, for ranges, I used the lower bound. This column was also converted to numeric.\nFor the address column, I kept it in case I wanted to refer to the full address later. But I also extracted just the city name into a separate column to analyze trends across cities.\nLastly, I removed any listings where either Beds or Baths were equal to zero.\nAfter cleaning, I was left with 278 observations out of the original 333.\n\nRent_Clean &lt;- SoCalRent |&gt;\n  #cleaning out any listings that have any empty data for the sake of my sanity\n  filter(!is.na(Price), !is.na(Beds), !is.na(Baths), !is.na(SqFt), !is.na(Address)) |&gt;\n  # Remove rows where SqFt starts with an en dash (—)\n  filter(!str_starts(SqFt, \"—\")) |&gt;\n  mutate(\n    # Price column: remove any $, +, /mo and change it to a numeric variable\n    Price = str_remove_all(Price, \"\\\\$|,|/mo|\\\\+\"),\n    Price = as.numeric(Price),\n\n    # Beds column: take the smallest number of beds and change it to a numeric variable\n    Beds = str_extract(Beds, \"^\\\\d+\"),\n    Beds = as.numeric(Beds),\n\n    # Baths column: take the smallest number of baths and change it to a numeric variable\n    Baths = str_extract(Baths, \"^\\\\d+(\\\\.\\\\d+)?\"),\n    Baths = as.numeric(Baths),\n\n    # SqFt column: takeing the first number from ranges, removes and commas or dashes and change it to a numeric variable\n    SqFt = str_remove_all(SqFt, \",\"),  # Remove commas\n    SqFt = case_when(\n      str_detect(SqFt, \"-\") ~ as.numeric(str_extract(SqFt, \"^[0-9]+\")),\n      TRUE ~ as.numeric(SqFt)\n    ),\n    # City Column: I decided to just make a new column \"titled city\" that was the address column is still there but I have just the city in a seperate column\n    City = str_split_fixed(Address, \",\", 3)[, 2]\n  ) |&gt;\n  # If beds or baths is 0, remove the row\n  filter(Beds != 0, Baths != 0)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `SqFt = case_when(...)`.\nCaused by warning:\n! NAs introduced by coercion\n\nhead(Rent_Clean)\n\n# A tibble: 6 × 8\n  Price  Beds Baths  SqFt Address                             Type  County City \n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                               &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;\n1  3195     4   2.5  1668 4001 Landau Ct, Riverside, CA 92501 house RIV    \" Ri…\n2  4000     4   2    2200 18590 Roberts Rd, Riverside, CA 92… house RIV    \" Ri…\n3  2300     2   1     900 3468 Wallace St, Jurupa Valley, CA… house RIV    \" Ju…\n4  3449     3   2.5  1970 531 Atwood Ct, Riverside, CA 92506  house RIV    \" Ri…\n5  1850     1   1     400 2767 Attenborough Dr, Riverside, C… house RIV    \" Ri…\n6  1950     1   1     440 10671 Sagittarius Dr, Riverside, C… house RIV    \" Ri…\n\n\n\n\nNumerical & Categorical Summaries\nI decided to look at the data by grouping by County and housing Type. In general the most type of housing was “House (114)”. LA have fewer apartment listings even though its more of an urban location. Riverside (tied with LA) with the most house listings fitting the suburban expectation. The listing size for each county is about 90 for each county, which is good for comparison. Looking through the listings its important to take into consideration that some of the cheaper house/condo listings are renting a ROOM within the place.\n\nRent_Clean|&gt;\n  tabyl(County,Type)|&gt;\n    adorn_totals(c(\"row\", \"col\"))\n\n County apartment condo house Total\n     LA        15    38    39    92\n     OC        23    39    36    98\n    RIV        24    25    39    88\n  Total        62   102   114   278\n\nRent_Clean |&gt;\n  count(County,Type)|&gt;\nggplot(aes(x = County, y = n, fill = Type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Distribution of Housing Types by County\",\n       x = \"County\", y = \"Number of Listings\")\n\n\n\n\n\n\n\n\nShowing the average and median rent prices by county and housing type. OC houses are more expensive. As expected apartments are the cheapest/afforable option for each county with riverside being the most affordable. Condo prices vary accross the board which could mean newer luxury built condos (think irvine a newer built area) in certain areas and older smaller condos in others(smaller older cities in riverside). The median is less than the mean (specifically in LA and OC). This means that there is a few expensive outlier listings that drive the average up.\n\nRent_Clean |&gt;\n  group_by(County, Type)|&gt;\n  summarize(mean_price = round(mean(Price, na.rm = TRUE)), \n            median_price = median(Price, na.rm = TRUE),\n            .groups = \"drop\")\n\n# A tibble: 9 × 4\n  County Type      mean_price median_price\n  &lt;chr&gt;  &lt;chr&gt;          &lt;dbl&gt;        &lt;dbl&gt;\n1 LA     apartment       3525         2950\n2 LA     condo           3673         3500\n3 LA     house           6547         5995\n4 OC     apartment       2595         2535\n5 OC     condo           4385         4000\n6 OC     house           7388         6850\n7 RIV    apartment       1885         1865\n8 RIV    condo           2479         2400\n9 RIV    house           3169         3400\n\nsummary_table &lt;- Rent_Clean |&gt;\n  group_by(County, Type) |&gt;\n  summarize(\n    mean.price = round(mean(Price, na.rm = TRUE)),\n    .groups = \"drop\"\n  )\n\nggplot(summary_table, aes(x = interaction(County, Type), y = mean.price, fill = County)) +\n  geom_col() +\n  scale_fill_manual(values=c(\"RIV\"=\"#084B83\",\"OC\"=\"#FF66B3\",\"LA\"=\"#42BFDD\"))+\n  labs(\n    title = \"Average Rent Price by County and Type\",\n    x = \"County & Type\",\n    y = \"Average Rent Price\"\n  ) +\n  theme_light() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nUsing quartiles (top 25% and bottom 75%) I was able to choose a lower bound and upper bound to then find the outliers. As seen the table below– the outliers are way outside of usually rent price.\n\noutliers &lt;- Rent_Clean |&gt;\n  group_by(County) |&gt;\n  mutate(\n    Q1 = quantile(Price, 0.25),\n    Q3 = quantile(Price, 0.75),\n    IQR = Q3 - Q1,\n    lower_bound = Q1 - 2 * IQR,\n    upper_bound = Q3 + 2 * IQR\n  ) |&gt;\n  filter(Price &lt; lower_bound | Price &gt; upper_bound)\nprint(outliers)\n\n# A tibble: 5 × 13\n# Groups:   County [2]\n  Price  Beds Baths  SqFt Address           Type  County City     Q1    Q3   IQR\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 13999     3     3  1854 13328 Galewood S… house LA     \" Sh… 2999. 5996. 2998.\n2 20000     5     4  4180 24803 Wooded Vis… house LA     \" We… 2999. 5996. 2998.\n3 12000     3     3  2743 2222 Bancroft Av… house LA     \" Lo… 2999. 5996. 2998.\n4 12500     3     2  1899 3670 May St, Los… house LA     \" Lo… 2999. 5996. 2998.\n5 30000     2     2  2000 1313 Disneyland … house OC     \" An… 2602. 6412. 3810 \n# ℹ 2 more variables: lower_bound &lt;dbl&gt;, upper_bound &lt;dbl&gt;\n\nggplot(Rent_Clean, aes(x = County, y = Price, fill = Type)) +\n  geom_boxplot(outlier.shape = 16, outlier.colour = \"red\", outlier.size = 3) +\n  labs(title = \"Rent Price Distribution by County and Housing Type\",\n       x = \"County\", y = \"Rent Price ($)\") +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nLooking at a summary table of mean price, average size, and average beds and baths by housing type and county. I’ve inclused price per SqFt to compare efficency costs. LA has the highest average SqFt, its also just the most expensive meaning its the least effecient. WHich could mean its high in demand. Riverside has smaller places but cheaper prices so an efficeint price per SqFt. OC has the biggest space.\nFor apartment prices, they are coonsidered smaller but doesnt necessarily mean the cheapest. for the OC area the average SqFt is 764 with the average price being $3.42/SqFt. The higher cost mihgt be for convience, ammenities or location..\n\nSummary_table &lt;- Rent_Clean|&gt;\n  group_by(County, Type)|&gt;\n  mutate(price_per_sqft = Price / SqFt) |&gt;\n  summarize(\n    mean.price= round(mean(Price)),\n    mean.SqFt= round(mean(SqFt)),\n    mean.beds= round(mean(Beds)),\n    mean.baths=round(mean(Baths)),\n    mean_price_per_sqft = round(mean(price_per_sqft)),\n    .groups = \"drop\"  )|&gt;\n  select(County, Type, mean_price_per_sqft)\nprint(Summary_table)\n\n# A tibble: 9 × 3\n  County Type      mean_price_per_sqft\n  &lt;chr&gt;  &lt;chr&gt;                   &lt;dbl&gt;\n1 LA     apartment                   4\n2 LA     condo                       3\n3 LA     house                       4\n4 OC     apartment                   3\n5 OC     condo                       4\n6 OC     house                       3\n7 RIV    apartment                   3\n8 RIV    condo                       2\n9 RIV    house                       2\n\n\nFinding correlation between Price and beds/baths/SqFt.\nRiverside: has a strong relaionship across beds, baths, and sqft. Meaning a pretty uniform housing market. LA: has the strongest corrrelation with SqFt meaning the market is driven by space then the commoditys. OC has medocre correlation meaning some other factors outside of beds, baths, sqft may be influencing the rent. (think schools, neighborhoods etc)\n\n# correlation analysis between price and beds\nRent_Clean|&gt;\n  group_by(County)|&gt;\n  summarise(\nBed_cor=cor(Price, Beds), \nBaths_cor=cor(Price, Baths), \nSqFt_cor=cor(Price, SqFt))\n\n# A tibble: 3 × 4\n  County Bed_cor Baths_cor SqFt_cor\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 LA       0.570     0.494    0.729\n2 OC       0.450     0.539    0.598\n3 RIV      0.901     0.782    0.799\n\n\n\nRent_Clean |&gt;\n  filter(Price &lt; 10000) |&gt;\n  mutate(County = as.character(County)) |&gt;\n  bind_rows(\n    Rent_Clean |&gt;\n      filter(Price &lt; 10000) |&gt;\n      mutate(County = \"All Counties\")\n  )|&gt;\nggplot(aes(x = Price, fill = County)) +\n  geom_histogram(binwidth = 800, color = \"black\") +\n  facet_wrap(~ County, scales = \"free_y\") +\n  labs(\n    title = \"Rent Price Distribution: Overall and by County\",\n    x = \"Rent Price ($)\",\n    y = \"Number of Listings\"\n  )\n\n\n\n\n\n\n\n\n\n\nWhats the question I’m trying to answer?\nFor this project, I want to approach rental affordability from a personal angle, while keeping it general enough that others could adapt it to their own situations. My main question is: What rental listings offer the best value given a specific salary? It’s a broad question, but the goal is to make it practical and grounded in real-life decision-making.\nA common rule of thumb is that individuals shouldn’t spend more than 30% of their income on rent. Based on this, I’ll introduce a salary variable to simulate what someone can realistically afford. This variable will help filter out listings that exceed that 30% income threshold.\nTo make the analysis more flexible, especially for listings with multiple bedrooms, I’m assuming that shared housing is an option. That means I’ll consider a unit affordable if the rent per bedroom is within 30% of a person’s monthly income. This way, I can include multi-bedroom apartments that might be affordable when split among roommates.\n\nsalary &lt;- 60000  # yearly salary\nmonthly_income &lt;- salary / 12 #calculating monthly paycheck assuming monthly rent payments\nmax_rent_per_room &lt;- (monthly_income * 0.30) #allowing only 30% of income to be sued for rent\nRent_Clean_Affordable &lt;- Rent_Clean |&gt;\n  mutate(\n    rent_per_room = Price / Beds,\n    affordable = rent_per_room &lt;= max_rent_per_room\n  )|&gt;\n  filter(affordable== TRUE)\n\n\n\nDeciding what listings are better for their price\nnow i have to deciede whether or not a listing it worth its value. we can begin by looking at SqFt per Price to determine if you getting the most space out of your value.\n\nRent_Clean_Affordable|&gt;\n  mutate( \n  sqft_per_dollar = SqFt / Price\n  )|&gt;\narrange(desc(sqft_per_dollar))\n\n# A tibble: 124 × 11\n   Price  Beds Baths  SqFt Address   Type  County City  rent_per_room affordable\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;         &lt;dbl&gt; &lt;lgl&gt;     \n 1   750     4   4    3000 217 E 29… condo LA     \" Lo…          188. TRUE      \n 2   899     1   1    1524 4283 5th… house RIV    \" Ri…          899  TRUE      \n 3   900     1   1    1068 200 E Al… condo RIV    \" Ri…          900  TRUE      \n 4  4200     5   4.5  3685 19737 Co… house RIV    \" Ri…          840  TRUE      \n 5  1109     2   2     904 | 3549 I… apar… RIV    \" Ri…          554. TRUE      \n 6  3900     4   3    3111 8515 McA… house RIV    \" Ri…          975  TRUE      \n 7  3790     4   3    2950 17346 Co… house RIV    \" Ri…          948. TRUE      \n 8  4100     5   3    2700 4541 Bra… house RIV    \" Ri…          820  TRUE      \n 9  4650     5   3    2909 16392 Fa… house RIV    \" Ri…          930  TRUE      \n10  3395     4   3.5  2100 4054 Bou… condo RIV    \" Ju…          849. TRUE      \n# ℹ 114 more rows\n# ℹ 1 more variable: sqft_per_dollar &lt;dbl&gt;\n\n\n\n\nInvestigating Listing\neven after all my data cleaning… this listing got thru. I decided to investigate it for the heck of it.\n217 E 29th St Unit 217 And 217 1 2, Los Angeles, CA 90011: Upon further investigation. This is a listing for 2 units with a total of 4 beds and 4 baths. Meaning each unit has 2 beds and 2 baths. Then the listing explains how each bedroom can house 2-3 people meaning acording to my code, rent cost would only be about $187 a month give or take a roomate or two. As GREAT of a rent price this seems. On the bright side-the listing seems to be a affordable housing option for someone who really needs it. On the more weary side- the listing seems sketchy and im unfortunately, not interested.\nRental Description: Our brand new, all-inclusive shared rooms are move-in ready just bring your bag and settle into comfort, convenience, and community in the heart of the city. All-inclusive rates starting at just $700/month only 2-3 person per room ! Move in today stay as long or as little as you need All utilities Wi-Fi included Weekly cleaning of shared spaces Private ensuite bathrooms in most rooms On-site laundry for easy living Street & paid parking available On-site manager for support when you need it No credit checks. No deposits. No SSN. Just a valid ID from any country.Spots are limited and going fast message now and claim your bed today!”\n\n\n\nbedroom\n\n\n\n\nCreating a Value Score"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Natalie Torres Portfolio",
    "section": "",
    "text": "Hi, I’m Natalie Torres — a statistics major at Cal State Fullerton. This portfolio showcases my projects. Currently a work in progress :D\n\nGitHub: @CodeTorres\nLinkedIn: Natalie Torres\n\n\n\n\n\nSoCalRent Analysis"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Natalie Torres Portfolio",
    "section": "",
    "text": "Hi, I’m Natalie Torres — a statistics major at Cal State Fullerton. This portfolio showcases my projects. Currently a work in progress :D\n\nGitHub: @CodeTorres\nLinkedIn: Natalie Torres"
  },
  {
    "objectID": "index.html#projects",
    "href": "index.html#projects",
    "title": "Natalie Torres Portfolio",
    "section": "",
    "text": "SoCalRent Analysis"
  }
]